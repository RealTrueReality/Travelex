@using Syncfusion.Blazor.Notifications
@using ShimmerEffect = Syncfusion.Blazor.Notifications.ShimmerEffect
@using Travelex.Entities

<div class="bg-white mx-4 rounded-xl p-6 shadow-sm border border-gray-200">
    @if (IsLoading)
    {
        <!-- Title and Status -->
        <div class="flex items-center justify-between mb-4">
            <SfSkeleton Width="30%" Height="24px" Effect=ShimmerEffect.Wave></SfSkeleton>
            <SfSkeleton Width="25%" Height="24px" Effect=ShimmerEffect.Wave CssClass="rounded-full"></SfSkeleton>
        </div>

        <!-- Description, Location, Date -->
        <div class="space-y-3">
            <div class="flex items-start space-x-2">
                <SfSkeleton Width="18px" Height="18px" Effect=ShimmerEffect.Wave CssClass="mt-1"></SfSkeleton>
                <SfSkeleton Width="50%" Height="18px" Effect=ShimmerEffect.Wave></SfSkeleton>
            </div>
            <div class="flex items-start space-x-2">
                <SfSkeleton Width="18px" Height="18px" Effect=ShimmerEffect.Wave CssClass="mt-1"></SfSkeleton>
                <SfSkeleton Width="50%" Height="18px" Effect=ShimmerEffect.Wave></SfSkeleton>
            </div>
            <div class="flex items-start space-x-2">
                <SfSkeleton Width="18px" Height="18px" Effect=ShimmerEffect.Wave CssClass="mt-1"></SfSkeleton>
                <SfSkeleton Width="50%" Height="18px" Effect=ShimmerEffect.Wave></SfSkeleton>
            </div>
            <div class="flex items-start space-x-2">
                <SfSkeleton Width="18px" Height="18px" Effect=ShimmerEffect.Wave CssClass="mt-1"></SfSkeleton>
                <SfSkeleton Width="50%" Height="18px" Effect=ShimmerEffect.Wave></SfSkeleton>
            </div>
            <div class="flex items-start space-x-2">
                <SfSkeleton Width="18px" Height="18px" Effect=ShimmerEffect.Wave CssClass="mt-1"></SfSkeleton>
                <SfSkeleton Width="50%" Height="18px" Effect=ShimmerEffect.Wave></SfSkeleton>
            </div>
        </div>
    }
    else
    {
        <div class="flex items-center justify-between mb-4">
            <h2 class="text-xl font-semibold text-[#111416]">@Travel.Title</h2>
            <span class="px-3 py-1 rounded-full text-base @GetStatusClass()">
                @Travel.StatusForDisplay
            </span>
        </div>

        <div class="space-y-3">
            @if (!string.IsNullOrEmpty(Travel.Description))
            {
                <div class="flex items-start space-x-2">
                    <i class="fas fa-align-left text-gray-500 mt-1"></i>
                    <p class="text-gray-600">@Travel.Description</p>
                </div>
            }

            <div class="flex items-start space-x-2">
                <i class="fas fa-map-marker-alt text-gray-500 mt-1"></i>
                @if (Travel is { Longitude: not null, Latitude: not null })
                {
                    <p class="text-gray-600">@($"{Travel.LocationName} 经度: {Travel.Longitude.Value}, 纬度: {Travel.Latitude.Value}")</p>
                }
                else
                {
                    <p class="text-gray-600">@Travel.LocationName</p>
                }
            </div>

            <div class="flex items-start space-x-2">
                <i class="fas fa-calendar text-gray-500 mt-1"></i>
                <p class="text-gray-600">
                    @Travel.StartDate?.ToString("yyyy-MM-dd") - @Travel.EndDate?.ToString("yyyy-MM-dd")
                </p>
            </div>

            @if (!string.IsNullOrEmpty(Travel.CategoryName))
            {
                <div class="flex items-start space-x-2">
                    <i class="fas fa-tag text-gray-500 mt-1"></i>
                    <p class="text-gray-600">@Travel.CategoryName</p>
                </div>
            }

            <div class="flex items-start space-x-2">
                <i class="fas fa-clock text-gray-500 mt-1"></i>
                <div class="text-gray-600">
                    <p>创建于：@Travel.AddedOn.ToString("yyyy-MM-dd HH:mm")</p>
                    @if (Travel.ModifiedOn.HasValue)
                    {
                        <p class="mt-0.5">修改于：@Travel.ModifiedOn.Value.ToString("yyyy-MM-dd HH:mm")</p>
                    }
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public bool IsLoading { get; set; }
    [Parameter] public Travel Travel { get; set; } = new();

    private string GetStatusClass()
    {
        return Travel.Status switch
        {
            TravelStatus.Planning => "bg-yellow-100 text-yellow-600",
            TravelStatus.Ongoing => "bg-blue-100 text-blue-600",
            TravelStatus.Completed => "bg-green-100 text-green-600",
            TravelStatus.Cancelled => "bg-red-100 text-red-600",
            _ => ""
        };
    }
}
