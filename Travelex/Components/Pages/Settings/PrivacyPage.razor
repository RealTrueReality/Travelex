@page "/settings/privacy"
@using Travelex.Components.Layout
@using Travelex.Services
@using Travelex.Models
@using Travelex.Utils
@inject NavigationManager NavigationManager
@inject AuthService AuthService
@inject BlazorMauiInterop BlazorMauiInterop

<FixedPageComponent>
    <TopBarLeft>
        <button @onclick="NavigateBack" class="p-2 text-[#252525]">
            <i class="fas fa-arrow-left text-xl"></i>
        </button>
    </TopBarLeft>
    <TopBarTitle>
        隐私与安全
    </TopBarTitle>
    <PageBody>
        <div class="p-4">
            <div class="text-2xl font-bold text-[#1C160C] mb-6">修改密码</div>
            
            <div class="space-y-4">
                <div>
                    <label class="block text-sm font-medium text-[#4C7C99] mb-1">当前密码</label>
                    <input type="password" @bind="_currentPassword" class="w-full h-12 px-4 rounded-lg border border-[#E8F0F2] focus:outline-none focus:border-[#119BED]" />
                    @if (!string.IsNullOrEmpty(_currentPasswordError))
                    {
                        <div class="text-red-500 text-sm mt-1">@_currentPasswordError</div>
                    }
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-[#4C7C99] mb-1">新密码</label>
                    <input type="password" @bind="_newPassword" class="w-full h-12 px-4 rounded-lg border border-[#E8F0F2] focus:outline-none focus:border-[#119BED]" />
                    @if (!string.IsNullOrEmpty(_newPasswordError))
                    {
                        <div class="text-red-500 text-sm mt-1">@_newPasswordError</div>
                    }
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-[#4C7C99] mb-1">确认新密码</label>
                    <input type="password" @bind="_confirmPassword" class="w-full h-12 px-4 rounded-lg border border-[#E8F0F2] focus:outline-none focus:border-[#119BED]" />
                    @if (!string.IsNullOrEmpty(_confirmPasswordError))
                    {
                        <div class="text-red-500 text-sm mt-1">@_confirmPasswordError</div>
                    }
                </div>
            </div>
            
            <button @onclick="ChangePassword" class="w-full h-12 bg-[#119BED] text-white rounded-[20px] mt-8">
                修改密码
            </button>
        </div>
    </PageBody>
</FixedPageComponent>

@code {
    private string _currentPassword = "";
    private string _newPassword = "";
    private string _confirmPassword = "";
    
    private string _currentPasswordError = "";
    private string _newPasswordError = "";
    private string _confirmPasswordError = "";

    private void NavigateBack()
    {
        NavigationManager.NavigateTo("/profile",replace:true);
    }

    private async Task ChangePassword()
    {
        // 重置错误信息
        _currentPasswordError = "";
        _newPasswordError = "";
        _confirmPasswordError = "";
        
        // 验证输入
        bool hasError = false;
        
        if (string.IsNullOrWhiteSpace(_currentPassword))
        {
            _currentPasswordError = "请输入当前密码";
            hasError = true;
        }
        
        if (string.IsNullOrWhiteSpace(_newPassword))
        {
            _newPasswordError = "请输入新密码";
            hasError = true;
        }
        else if (_newPassword.Length < 6)
        {
            _newPasswordError = "新密码长度不能少于6位";
            hasError = true;
        }
        
        if (string.IsNullOrWhiteSpace(_confirmPassword))
        {
            _confirmPasswordError = "请确认新密码";
            hasError = true;
        }
        else if (_newPassword != _confirmPassword)
        {
            _confirmPasswordError = "两次输入的密码不一致";
            hasError = true;
        }
        
        if (hasError) return;

        // 调用修改密码服务
        var result = await AuthService.ChangePasswordAsync(_currentPassword, _newPassword);
        
        if (result.IsSuccess)
        {
            await BlazorMauiInterop.ShowToastAsync("密码修改成功");
            NavigationManager.NavigateTo("/profile");
        }
        else
        {
            _currentPasswordError = result.Message ?? "当前密码错误";
        }
    }
}
